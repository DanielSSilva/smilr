#
# Azure Pipeline - Build definition
# Build both Smilr Node.js images and push to Azure Container Registry
# Deploy to Azure Container Instances across multiple stages
# Ben C, 2018
#

trigger:
- devops-testing

# NOTE! This variable group must be pre-created and populated
# - Expected variables: acr-name, acr-password
variables:
  - group: shared-variables

stages:
#
# Build stage
#
- stage: build
  displayName: 'Build containers'
  condition: false

  jobs:
  - job: buildJob
    displayName: 'Docker build & ACR push'

    pool:
      vmImage: Ubuntu-16.04

    steps:
    # Data API build, tag as both latest and BuildNumber
    - bash: |
        docker build . -f node/data-api/Dockerfile -t $(acr-name).azurecr.io/smilr/data-api:latest -t $(acr-name).azurecr.io/smilr/data-api:$(Build.BuildNumber)
      displayName: 'Build data API image'

    - bash: |
        docker login $(acr-name).azurecr.io -u $(acr-name) -p $(acr-password)
        docker push $(acr-name).azurecr.io/smilr/data-api
      displayName: 'Push data API image(s) to ACR'

    # Frontend build, tag as both latest and BuildNumber
    - bash: |
        docker build . -f node/frontend/Dockerfile -t smilr/frontend:latest -t smilr/frontend:$(Build.BuildNumber) -t $(acr-name).azurecr.io/smilr/frontend:latest -t $(acr-name).azurecr.io/smilr/frontend:$(Build.BuildNumber)
      displayName: 'Build frontend image'

    - bash: |
        docker login $(acr-name).azurecr.io -u $(acr-name) -p $(acr-password)
        docker push $(acr-name).azurecr.io/smilr/frontend
      displayName: 'Push frontend image(s) to ACR'

#
# Deploy stage 1 - test environment
#
- stage: deployToTest
  displayName: Deploy to Test
  condition: true
  
  variables:
    location: westeurope
    dns-prefix: smilr-$(Build.BuildId)-test

  jobs:
  - template: templates/deploy-aci-arm.yml
    parameters:
      envName: Test

  - job: runTestsJob
    dependsOn: deployWithACI
    displayName: 'Functional API tests'
    pool:
      vmImage: Ubuntu-16.04

    steps:
    - checkout: self
    - bash: install -g newman --prefix $(System.DefaultWorkingDirectory)
    - bash: $(System.DefaultWorkingDirectory)/bin/newman run etc/postman/Smilr.postman_collection.json -r junit -n 3 --global-var smilr-api-host="$(dns-prefix)-api.$(location).azurecontainer.io" --global-var smilr-front-host="$(dns-prefix)-frontend.$(location).azurecontainer.io" --timeout 180000
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: 'newman/*.xml'
      condition: succeededOrFailed()


#
# Deploy stage 2 - staging environment
#
- stage: deployToStaging
  displayName: Deploy to Staging
  condition: true
  jobs:
  - template: templates/deploy-aci-arm.yml
    parameters:
      envName: Staging