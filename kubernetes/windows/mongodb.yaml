#
# Deploy the back end databse in Kubernetes, as StatefulSet with a volume claim
#

# ------------------- Deployment ------------------- #

kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  serviceName: "mongo"
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      tolerations:
        - key: "windows"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"    
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - windows

      containers:
      - name: mongodb-pods

        image: bencuk/mongo:windows1809
        imagePullPolicy: IfNotPresent
        
        ports:
        - containerPort: 27017

        volumeMounts:
          - name: mongo-storage-win
            mountPath: /data/db

        livenessProbe:
          exec:
            command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          timeoutSeconds: 2
          periodSeconds: 10

        resources:
          limits:
            cpu: "0.5"

  volumeClaimTemplates:
    - metadata:
        name: mongo-storage-win
        annotations:
          volume.beta.kubernetes.io/storage-class: default
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 500M

---

# ------------------- Internal Cluster IP ------------------- #

kind: Service
apiVersion: v1
metadata:
  # Windows bug, do not put a dash in the service name!
  name: mongodb
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017
  selector:
    app: mongodb