name: Release Dockerhub Image

on:
  release:
    types: [published]

env:
  DOCKERHUB_USER: bencuk
  ACR_NAME:       bcdemo

jobs:
  # ===============================================================
  #
  # ===============================================================
  releaseJob:
    runs-on: ubuntu-latest

    steps:
    - name: 'Login to Dockerhub'
      run: docker login -u ${{ env.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: 'Login to ACR'
      run: docker login -u ${{ env.ACR_NAME }} -p ${{ secrets.ACR_PASSWORD }} ${{ env.ACR_NAME }}.azurecr.io    
      
    - name: 'Pull latest images'
      run: |
        docker pull ${{ env.ACR_NAME }}.azurecr.io/smilr/data-api:latest
        docker pull ${{ env.ACR_NAME }}.azurecr.io/smilr/frontend:latest

    - name: 'Retag images for release'
      run: |
        docker tag ${{ env.ACR_NAME }}.azurecr.io/smilr/frontend:latest smilr/frontend:${{ github.event.release.tag_name }}
        docker tag ${{ env.ACR_NAME }}.azurecr.io/smilr/data-api:latest smilr/data-api:${{ github.event.release.tag_name }}
        docker tag ${{ env.ACR_NAME }}.azurecr.io/smilr/frontend:latest smilr/frontend:latest
        docker tag ${{ env.ACR_NAME }}.azurecr.io/smilr/data-api:latest smilr/data-api:latest

    - name: 'Push images to Dockerhub'
      run: |
        docker push smilr/frontend
        docker push smilr/data-api       

  # ===============================================================
  #
  # ===============================================================
  deployJob:
    env:
      AKS_NAME:       bcdemo
      AKS_RES_GRP:    demo.aks  
      HELM_RELEASE:   live
      HELM_NS:        smilr
      HELM_DOMAIN:    kube.benco.io
      HELM_CERT:      kube-benco-io-cert  

    runs-on: ubuntu-latest

    steps:  
    - name: 'Checkout repo'
      uses: actions/checkout@v1          

    - name: 'Connect to AKS'
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}' # Azure credentials
        resource-group: '${{ env.AKS_RES_GRP }}'
        cluster-name: '${{ env.AKS_NAME }}'
      id: login

    - name: 'Helm repo & dependency update'
      run: |
        helm repo add stable https://kubernetes-charts.storage.googleapis.com
        helm dep update kubernetes/helm/smilr

    - name: 'Helm install live release'
      uses: deliverybot/helm@v1
      with:
        release: ${{ env.HELM_RELEASE }}
        namespace: ${{ env.HELM_NS }}
        chart: kubernetes/helm/smilr
        token: ${{ github.token }}
        values: |
          registryPrefix: bcdemo.azurecr.io/

          ingress:
            domainSuffix: kube.benco.io
            certName: kube-benco-io-cert
              
          dataApi:
            imageTag: ${{ github.event.release.tag_name }}
            replicas: 1
            aadClientId: bfd50950-a772-4b7f-bc51-065a07705ced

          frontend:
            imageTag: ${{ github.event.release.tag_name }}
            replicas: 1
            aadClientId: bfd50950-a772-4b7f-bc51-065a07705ced

          mongodb:
            enabled: true

    # - name: 'Helm install live release'
    #   run: |
    #     helm upgrade $HELM_RELEASE kubernetes/helm/smilr --install --namespace $HELM_NS --set "dataApi.imageTag=${{ github.event.client_payload.imagetag }},dataApi.replicas=2frontend.imageTag=${{ github.event.client_payload.imagetag }},ingress.domainSuffix=$HELM_DOMAIN,ingress.certName=$HELM_CERT"
 
